<%- include('../components/head') %>

<body class="bg-background text-foreground flex min-h-screen flex-col">
  <!-- Create server modal -->
  <%- include('../components/modal') %>
  <%- include('../components/navigation') %>
  
  <div class="flex flex-col flex-1 md:pl-64">
    <%- include('../components/header') %>
    
    <main class="flex-1 py-8 container px-4 md:px-6">
      <!-- Page header -->
      <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8">
        <div>
          <h1 class="text-2xl font-bold tracking-tight">Servers</h1>
          <p class="text-muted-foreground">Manage your servers on <%= settings.name %>.</p>
        </div>
        <button onclick="toggleModal()" type="button" class="btn-primary animate-fade-in">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 mr-2">
            <rect width="18" height="18" x="3" y="3" rx="2" ry="2"></rect>
            <line x1="12" x2="12" y1="8" y2="16"></line>
            <line x1="8" x2="16" y1="12" y2="12"></line>
          </svg>
          Create server
        </button>
      </div>
      
      <!-- Notifications -->
      <% if (req.query.err && req.query.err == "CREATED") { %>
      <div class="rounded-lg border bg-primary/10 border-primary p-4 mb-6 animate-fade-in">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-primary">
              <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path>
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-primary">Server queued for deployment</h3>
            <div class="mt-1 text-sm text-muted-foreground">
              <p>Please allow it a few minutes to install the requested software. You can manage your server via the Panel.</p>
            </div>
          </div>
        </div>
      </div>
      <% } %>
      
      <% if (req.query.err && req.query.err == "MODIFIED") { %>
      <div class="rounded-lg border bg-primary/10 border-primary p-4 mb-6 animate-fade-in">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-primary">
              <path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path>
              <path d="m9 12 2 2 4-4"></path>
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-primary">Server queued for modification</h3>
            <div class="mt-1 text-sm text-muted-foreground">
              <p>Please allow up to 60 seconds for server edits to be completed.</p>
            </div>
          </div>
        </div>
      </div>
      <% } %>
      
      <% if (req.query.err && req.query.err == "DELETED") { %>
      <div class="rounded-lg border bg-primary/10 border-primary p-4 mb-6 animate-fade-in">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-primary">
              <path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path>
              <path d="m9 12 2 2 4-4"></path>
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-primary">Server deleted successfully</h3>
            <div class="mt-1 text-sm text-muted-foreground">
              <p>Your server has been deleted and all associated resources have been released.</p>
            </div>
          </div>
        </div>
      </div>
      <% } %>
      
      <!-- Server grid -->
      <% if (pterodactyl.relationships.servers.data.length == 0) { %>
      <div class="flex flex-col items-center justify-center py-12 text-center animate-fade-in">
        <div class="w-20 h-20 mb-6 rounded-full bg-secondary/30 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10 text-muted-foreground">
            <rect width="20" height="8" x="2" y="2" rx="2" ry="2"></rect>
            <rect width="20" height="8" x="2" y="14" rx="2" ry="2"></rect>
            <line x1="6" x2="6.01" y1="6" y2="6"></line>
            <line x1="6" x2="6.01" y1="18" y2="18"></line>
          </svg>
        </div>
        <h2 class="text-xl font-bold mb-2">No servers found</h2>
        <p class="text-muted-foreground max-w-md mb-6">You don't have any servers yet. Create your first server to get started with hosting your applications.</p>
        <button onclick="toggleModal()" type="button" class="btn-primary">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 mr-2">
            <rect width="18" height="18" x="3" y="3" rx="2" ry="2"></rect>
            <line x1="12" x2="12" y1="8" y2="16"></line>
            <line x1="8" x2="16" y1="12" y2="12"></line>
          </svg>
          Create your first server
        </button>
      </div>
      <% } else { %>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <% for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) { 
          const server = pterodactyl.relationships.servers.data[i].attributes;
          const serverName = server.name.length > 40 ? server.name.slice(0, 40) + "..." : server.name;
        %>
        <div class="card border-border/40 group animate-fade-in" style="animation-delay: <%= i * 0.05 %>s">
          <div class="card-header pb-3">
            <div class="flex justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 rounded-full bg-secondary/30 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-primary">
                    <rect width="20" height="8" x="2" y="2" rx="2" ry="2"></rect>
                    <rect width="20" height="8" x="2" y="14" rx="2" ry="2"></rect>
                    <line x1="6" x2="6.01" y1="6" y2="6"></line>
                    <line x1="6" x2="6.01" y1="18" y2="18"></line>
                  </svg>
                </div>
                <div>
                  <h3 class="card-title"><%= serverName %></h3>
                  <p class="card-description font-mono text-xs"><%= server.identifier %></p>
                </div>
              </div>
              <div class="flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity">
                <a href="../delete?id=<%= server.id %>" onclick="return confirm('Are you sure you want to delete this server?')" class="p-1.5 text-muted-foreground hover:text-destructive transition-colors">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4">
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                    <line x1="10" x2="10" y1="11" y2="17"></line>
                    <line x1="14" x2="14" y1="11" y2="17"></line>
                  </svg>
                </a>
              </div>
            </div>
          </div>
          <div class="card-content pb-3">
            <div class="grid grid-cols-3 gap-2 text-sm">
              <div class="flex flex-col">
                <span class="text-muted-foreground">CPU</span>
                <span class="font-medium"><%= server.limits.cpu/100 %> core<%= server.limits.cpu/100 !== 1 ? 's' : '' %></span>
              </div>
              <div class="flex flex-col">
                <span class="text-muted-foreground">RAM</span>
                <span class="font-medium"><%= server.limits.memory/1024 %> GB</span>
              </div>
              <div class="flex flex-col">
                <span class="text-muted-foreground">Storage</span>
                <span class="font-medium"><%= server.limits.disk/1024 %> GB</span>
              </div>
            </div>
          </div>
          <div class="card-footer pt-3 border-t border-border/30 flex justify-between">
            <a href="../edit?id=<%= server.id %>" class="inline-flex items-center justify-center text-sm font-medium transition-colors hover:text-primary">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 mr-1">
                <path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"></path>
                <path d="m15 5 4 4"></path>
              </svg>
              Edit
            </a>
            <a href="<%= settings.pterodactyl.domain %>/server/<%= server.identifier %>" target="_blank" class="inline-flex items-center justify-center text-sm font-medium transition-colors hover:text-primary">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 mr-1">
                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                <polyline points="15 3 21 3 21 9"></polyline>
                <line x1="10" x2="21" y1="14" y2="3"></line>
              </svg>
              Visit panel
            </a>
          </div>
        </div>
        <% } %>
        
        <!-- Create server card -->
        <button onclick="toggleModal()" class="border border-dashed border-border rounded-xl p-6 flex flex-col items-center justify-center h-full bg-transparent hover:bg-card transition-colors cursor-pointer animate-fade-in">
          <div class="w-10 h-10 rounded-full bg-secondary/30 flex items-center justify-center mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-primary">
              <line x1="12" x2="12" y1="5" y2="19"></line>
              <line x1="5" x2="19" y1="12" y2="12"></line>
            </svg>
          </div>
          <span class="text-sm font-medium">Create new server</span>
        </button>
      </div>
      <% } %>
    </main>
    
    <%- include('../components/footer') %>
  </div>
</body>

<script>
  function toggleModal() {
    window.dispatchEvent(new CustomEvent('toggle-modal'));
  }

  function selectLocation(name) {
    const previous = document.querySelector('.location-card.card-selected');
    if (previous) {
      previous.classList.remove('card-selected');
    }
    const selected = document.querySelector(`.location-card[data-name="${name}"]`);
    selected.classList.add('card-selected');
    document.getElementById('InputLoc').value = name;
  }

  function selectEgg(name) {
    const previous = document.querySelector('.egg-card.card-selected');
    if (previous) {
      previous.classList.remove('card-selected');
    }
    const selected = document.querySelector(`.egg-card[data-name="${name}"]`);
    selected.classList.add('card-selected');
    document.getElementById('InputEgg').value = name;
  }

  async function submitNew() {
    let name = encodeURIComponent(document.getElementById("InputName").value);
    let egg = encodeURIComponent(document.getElementById("InputEgg").value);
    let ram = encodeURIComponent(document.getElementById("InputRAM").value * 1024);
    let disk = encodeURIComponent(document.getElementById("InputDisk").value * 1024);
    let cpu = encodeURIComponent(document.getElementById("InputCPU").value * 100);
    let location = encodeURIComponent(document.getElementById("InputLoc").value);
    document.location.href = `/create?name=${name}&egg=${egg}&ram=${ram}&disk=${disk}&cpu=${cpu}&location=${location}`;
  };
</script>